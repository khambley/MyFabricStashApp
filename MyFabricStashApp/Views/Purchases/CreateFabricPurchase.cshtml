@model MyFabricStashApp.Models.Purchase

@{
    ViewBag.Title = "CreateFabricPurchase";
}
<script type="text/javascript">
    $(function () {
        $('.date-picker').datepicker();
    })
</script>
<h2>CreateFabricPurchase</h2>
<!--This will post back to the same form it came from <form action="/Purchases/Create?Id=3" method="post">-->
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Add New Purchase for Fabric: </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <span class="control-label col-md-2">Date: </span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Qty Purchased: </span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Price: </span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2">Total: </span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchaseTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FabricId, "FabricId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayText("FabricName")<br />
                
                @Html.TextBoxFor(model => model.FabricId, new { @Value = ViewBag.FabricId })
                @Html.ValidationMessageFor(model => model.FabricId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReceiptId, "ReceiptId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReceiptId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReceiptId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SourceId, "SourceId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SourceId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SourceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
